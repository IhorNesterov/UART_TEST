ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <../Src/NOS_LIB_Driver/Inc/NOS_Lib.h>
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** TIM_HandleTypeDef htim6;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** UART_HandleTypeDef huart2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** extern uint8_t frameBuffer1[3 * 256];
  49:Core/Src/main.c **** extern uint8_t frameBuffer2[3 * 8 * 64];
  50:Core/Src/main.c **** extern uint8_t frameBuffer3[3 * 8 * 32];
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** NOS_TimeEvent tetrisUpdateEvent = {0};
  53:Core/Src/main.c **** NOS_TimeEvent screenUpdateEvent = {0};
  54:Core/Src/main.c **** NOS_TimeEvent uartTestEvent = {0};
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** WS2812B_Strip stripA = {0};
  57:Core/Src/main.c **** PixelColor pixelsA[32];
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** uint8_t rx_buff[256];
  60:Core/Src/main.c **** uint8_t fuckBuff[1024];
  61:Core/Src/main.c **** uint16_t fuckIndex = 0;
  62:Core/Src/main.c **** bool rx_flag = false;
  63:Core/Src/main.c **** bool tx_flag = false;
  64:Core/Src/main.c **** int currMessageLenght = 0;
  65:Core/Src/main.c **** bool startReceive = false;
  66:Core/Src/main.c **** bool endReceive = false;
  67:Core/Src/main.c **** int receiveTime = 0;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** SinValue bright = {0};
  70:Core/Src/main.c **** /* USER CODE END PV */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  73:Core/Src/main.c **** void SystemClock_Config(void);
  74:Core/Src/main.c **** static void MX_GPIO_Init(void);
  75:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  76:Core/Src/main.c **** static void MX_TIM6_Init(void);
  77:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* USER CODE END PFP */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  82:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  83:Core/Src/main.c **** void ReceiveReset(uint8_t* rx_buff_ptr)
  84:Core/Src/main.c **** {
  85:Core/Src/main.c ****   rx_buff_ptr = rx_buff;
  86:Core/Src/main.c ****   currMessageLenght = 0;
  87:Core/Src/main.c ****   rx_flag = true;
  88:Core/Src/main.c **** }
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** void ContinueReceive(uint8_t* rx_buff_ptr)
  91:Core/Src/main.c **** {
  92:Core/Src/main.c ****   rx_buff[currMessageLenght] = *rx_buff_ptr;
  93:Core/Src/main.c ****   ++rx_buff_ptr;
  94:Core/Src/main.c ****   currMessageLenght++;
  95:Core/Src/main.c **** }
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef* huart) {
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** static uint8_t* rx_buff_ptr = rx_buff;
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** startReceive = true;
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** fuckBuff[fuckIndex] = *rx_buff_ptr;
 104:Core/Src/main.c **** fuckIndex++;
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** if(fuckIndex > 1023)
 107:Core/Src/main.c **** {
 108:Core/Src/main.c ****   fuckIndex = 0;
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** if(*rx_buff_ptr == '\0')
 112:Core/Src/main.c **** {
 113:Core/Src/main.c ****   ReceiveReset(rx_buff_ptr);
 114:Core/Src/main.c **** }
 115:Core/Src/main.c **** else
 116:Core/Src/main.c **** {
 117:Core/Src/main.c ****   ContinueReceive(rx_buff_ptr);
 118:Core/Src/main.c **** }
 119:Core/Src/main.c ****     HAL_UART_Receive_IT (&huart2, rx_buff_ptr, 1); 
 120:Core/Src/main.c **** }
 121:Core/Src/main.c **** /* USER CODE END 0 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** /**
 124:Core/Src/main.c ****   * @brief  The application entry point.
 125:Core/Src/main.c ****   * @retval int
 126:Core/Src/main.c ****   */
 127:Core/Src/main.c **** int main(void)
 128:Core/Src/main.c **** {
 129:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE END 1 */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 136:Core/Src/main.c ****   HAL_Init();
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE END Init */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Configure the system clock */
 143:Core/Src/main.c ****   SystemClock_Config();
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* USER CODE END SysInit */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* Initialize all configured peripherals */
 150:Core/Src/main.c ****   MX_GPIO_Init();
 151:Core/Src/main.c ****   MX_USART2_UART_Init();
 152:Core/Src/main.c ****   MX_TIM6_Init();
 153:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 154:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2,rx_buff,1);
 155:Core/Src/main.c ****   HAL_UART_Transmit(&huart2,"HELLO",sizeof("HELLO"),1000);
 156:Core/Src/main.c ****   visInit();
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   NOS_WS2812B_Strip_FullInit(&stripA,&frameBuffer1,&pixelsA,32);
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   NOS_TimeEvent_Init(&tetrisUpdateEvent, 50);
 161:Core/Src/main.c ****   NOS_TimeEvent_Init(&screenUpdateEvent, 20);
 162:Core/Src/main.c ****   NOS_TimeEvent_Init(&uartTestEvent, 1000);
 163:Core/Src/main.c ****   NOS_WS2812B_Strip_TestFill(&stripA);
 164:Core/Src/main.c ****   NOS_Math_SinValue_Init(&bright,20,60,1);
 165:Core/Src/main.c ****   /* USER CODE END 2 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* Infinite loop */
 168:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 169:Core/Src/main.c ****   while (1)
 170:Core/Src/main.c ****   {
 171:Core/Src/main.c ****     if (NOS_TimeEvent_Check(&tetrisUpdateEvent))
 172:Core/Src/main.c ****     { 
 173:Core/Src/main.c ****       if(rx_flag)
 174:Core/Src/main.c ****       {
 175:Core/Src/main.c ****         char mess[] = "Recieved!"; 
 176:Core/Src/main.c ****         NOS_WS2812B_Strip_SetPixelByRGB(&stripA,29,0x00a529c4);
 177:Core/Src/main.c ****         HAL_UART_Transmit(&huart2,&mess,10,1000);
 178:Core/Src/main.c ****         rx_flag = false;
 179:Core/Src/main.c ****       }
 180:Core/Src/main.c ****       NOS_Math_SinValue_Handler(&bright);
 181:Core/Src/main.c ****       NOS_TimeEvent_FinishEvent(&tetrisUpdateEvent);
 182:Core/Src/main.c ****     }
 183:Core/Src/main.c ****     
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****     if (NOS_TimeEvent_Check(&screenUpdateEvent))
 186:Core/Src/main.c ****     {
 187:Core/Src/main.c ****       stripA.bright = NOS_Math_GetSinValue(&bright);
 188:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripA);
 189:Core/Src/main.c ****       visHandle();
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****       NOS_TimeEvent_FinishEvent(&screenUpdateEvent);
 192:Core/Src/main.c ****     }
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****     /* USER CODE END WHILE */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c ****   /* USER CODE END 3 */
 199:Core/Src/main.c **** }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** /**
 202:Core/Src/main.c ****   * @brief System Clock Configuration
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 5


 203:Core/Src/main.c ****   * @retval None
 204:Core/Src/main.c ****   */
 205:Core/Src/main.c **** void SystemClock_Config(void)
 206:Core/Src/main.c **** {
 207:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 208:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 213:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 216:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 219:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 220:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 160;
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 227:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 228:Core/Src/main.c ****   {
 229:Core/Src/main.c ****     Error_Handler();
 230:Core/Src/main.c ****   }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 233:Core/Src/main.c ****   */
 234:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 235:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 236:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 237:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 238:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 239:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 242:Core/Src/main.c ****   {
 243:Core/Src/main.c ****     Error_Handler();
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c **** }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /**
 248:Core/Src/main.c ****   * @brief TIM6 Initialization Function
 249:Core/Src/main.c ****   * @param None
 250:Core/Src/main.c ****   * @retval None
 251:Core/Src/main.c ****   */
 252:Core/Src/main.c **** static void MX_TIM6_Init(void)
 253:Core/Src/main.c **** {
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 0 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END TIM6_Init 0 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 1 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE END TIM6_Init 1 */
 264:Core/Src/main.c ****   htim6.Instance = TIM6;
 265:Core/Src/main.c ****   htim6.Init.Prescaler = 0;
 266:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 267:Core/Src/main.c ****   htim6.Init.Period = 65535;
 268:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 269:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 270:Core/Src/main.c ****   {
 271:Core/Src/main.c ****     Error_Handler();
 272:Core/Src/main.c ****   }
 273:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 274:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 275:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 276:Core/Src/main.c ****   {
 277:Core/Src/main.c ****     Error_Handler();
 278:Core/Src/main.c ****   }
 279:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 2 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE END TIM6_Init 2 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** /**
 286:Core/Src/main.c ****   * @brief USART2 Initialization Function
 287:Core/Src/main.c ****   * @param None
 288:Core/Src/main.c ****   * @retval None
 289:Core/Src/main.c ****   */
 290:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 291:Core/Src/main.c **** {
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 300:Core/Src/main.c ****   huart2.Instance = USART2;
 301:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 302:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 303:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 304:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 305:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 306:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 307:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 308:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 309:Core/Src/main.c ****   {
 310:Core/Src/main.c ****     Error_Handler();
 311:Core/Src/main.c ****   }
 312:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** }
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** /**
 319:Core/Src/main.c ****   * @brief GPIO Initialization Function
 320:Core/Src/main.c ****   * @param None
 321:Core/Src/main.c ****   * @retval None
 322:Core/Src/main.c ****   */
 323:Core/Src/main.c **** static void MX_GPIO_Init(void)
 324:Core/Src/main.c **** {
  28              		.loc 1 324 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 8
 325:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 326:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 329:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  35              		.loc 1 329 3 view .LVU1
  36              	.LBB4:
  37              		.loc 1 329 3 view .LVU2
  38 0002 0023     		movs	r3, #0
  39 0004 0193     		str	r3, [sp, #4]
  40              		.loc 1 329 3 view .LVU3
  41 0006 064B     		ldr	r3, .L3
  42 0008 1A6B     		ldr	r2, [r3, #48]
  43 000a 42F00102 		orr	r2, r2, #1
  44 000e 1A63     		str	r2, [r3, #48]
  45              		.loc 1 329 3 view .LVU4
  46 0010 1B6B     		ldr	r3, [r3, #48]
  47 0012 03F00103 		and	r3, r3, #1
  48 0016 0193     		str	r3, [sp, #4]
  49              		.loc 1 329 3 view .LVU5
  50 0018 019B     		ldr	r3, [sp, #4]
  51              	.LBE4:
  52              		.loc 1 329 3 view .LVU6
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 332:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 333:Core/Src/main.c **** }
  53              		.loc 1 333 1 is_stmt 0 view .LVU7
  54 001a 02B0     		add	sp, sp, #8
  55              		.cfi_def_cfa_offset 0
  56              		@ sp needed
  57 001c 7047     		bx	lr
  58              	.L4:
  59 001e 00BF     		.align	2
  60              	.L3:
  61 0020 00380240 		.word	1073887232
  62              		.cfi_endproc
  63              	.LFE137:
  65              		.section	.text.ReceiveReset,"ax",%progbits
  66              		.align	1
  67              		.global	ReceiveReset
  68              		.syntax unified
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 8


  69              		.thumb
  70              		.thumb_func
  72              	ReceiveReset:
  73              	.LVL0:
  74              	.LFB130:
  84:Core/Src/main.c ****   rx_buff_ptr = rx_buff;
  75              		.loc 1 84 1 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  85:Core/Src/main.c ****   currMessageLenght = 0;
  80              		.loc 1 85 3 view .LVU9
  86:Core/Src/main.c ****   rx_flag = true;
  81              		.loc 1 86 3 view .LVU10
  86:Core/Src/main.c ****   rx_flag = true;
  82              		.loc 1 86 21 is_stmt 0 view .LVU11
  83 0000 034B     		ldr	r3, .L6
  84 0002 0022     		movs	r2, #0
  85 0004 1A60     		str	r2, [r3]
  87:Core/Src/main.c **** }
  86              		.loc 1 87 3 is_stmt 1 view .LVU12
  87:Core/Src/main.c **** }
  87              		.loc 1 87 11 is_stmt 0 view .LVU13
  88 0006 034B     		ldr	r3, .L6+4
  89 0008 0122     		movs	r2, #1
  90 000a 1A70     		strb	r2, [r3]
  88:Core/Src/main.c **** 
  91              		.loc 1 88 1 view .LVU14
  92 000c 7047     		bx	lr
  93              	.L7:
  94 000e 00BF     		.align	2
  95              	.L6:
  96 0010 00000000 		.word	currMessageLenght
  97 0014 00000000 		.word	rx_flag
  98              		.cfi_endproc
  99              	.LFE130:
 101              		.section	.text.ContinueReceive,"ax",%progbits
 102              		.align	1
 103              		.global	ContinueReceive
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 108              	ContinueReceive:
 109              	.LVL1:
 110              	.LFB131:
  91:Core/Src/main.c ****   rx_buff[currMessageLenght] = *rx_buff_ptr;
 111              		.loc 1 91 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
  92:Core/Src/main.c ****   ++rx_buff_ptr;
 116              		.loc 1 92 3 view .LVU16
  92:Core/Src/main.c ****   ++rx_buff_ptr;
 117              		.loc 1 92 10 is_stmt 0 view .LVU17
 118 0000 034A     		ldr	r2, .L9
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 9


 119 0002 1368     		ldr	r3, [r2]
  92:Core/Src/main.c ****   ++rx_buff_ptr;
 120              		.loc 1 92 32 view .LVU18
 121 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 122              	.LVL2:
  92:Core/Src/main.c ****   ++rx_buff_ptr;
 123              		.loc 1 92 30 view .LVU19
 124 0006 0349     		ldr	r1, .L9+4
 125 0008 C854     		strb	r0, [r1, r3]
  93:Core/Src/main.c ****   currMessageLenght++;
 126              		.loc 1 93 3 is_stmt 1 view .LVU20
 127              	.LVL3:
  94:Core/Src/main.c **** }
 128              		.loc 1 94 3 view .LVU21
  94:Core/Src/main.c **** }
 129              		.loc 1 94 20 is_stmt 0 view .LVU22
 130 000a 0133     		adds	r3, r3, #1
 131 000c 1360     		str	r3, [r2]
  95:Core/Src/main.c **** 
 132              		.loc 1 95 1 view .LVU23
 133 000e 7047     		bx	lr
 134              	.L10:
 135              		.align	2
 136              	.L9:
 137 0010 00000000 		.word	currMessageLenght
 138 0014 00000000 		.word	rx_buff
 139              		.cfi_endproc
 140              	.LFE131:
 142              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 143              		.align	1
 144              		.global	HAL_UART_RxCpltCallback
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 149              	HAL_UART_RxCpltCallback:
 150              	.LVL4:
 151              	.LFB132:
  97:Core/Src/main.c **** 
 152              		.loc 1 97 57 is_stmt 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
  97:Core/Src/main.c **** 
 156              		.loc 1 97 57 is_stmt 0 view .LVU25
 157 0000 08B5     		push	{r3, lr}
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 3, -8
 160              		.cfi_offset 14, -4
  99:Core/Src/main.c **** 
 161              		.loc 1 99 1 is_stmt 1 view .LVU26
 101:Core/Src/main.c **** 
 162              		.loc 1 101 1 view .LVU27
 101:Core/Src/main.c **** 
 163              		.loc 1 101 14 is_stmt 0 view .LVU28
 164 0002 114B     		ldr	r3, .L16
 165 0004 0122     		movs	r2, #1
 166 0006 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 10


 103:Core/Src/main.c **** fuckIndex++;
 167              		.loc 1 103 1 is_stmt 1 view .LVU29
 103:Core/Src/main.c **** fuckIndex++;
 168              		.loc 1 103 9 is_stmt 0 view .LVU30
 169 0008 104A     		ldr	r2, .L16+4
 170 000a 1388     		ldrh	r3, [r2]
 103:Core/Src/main.c **** fuckIndex++;
 171              		.loc 1 103 23 view .LVU31
 172 000c 1049     		ldr	r1, .L16+8
 173 000e 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 174              	.LVL5:
 103:Core/Src/main.c **** fuckIndex++;
 175              		.loc 1 103 21 view .LVU32
 176 0010 1049     		ldr	r1, .L16+12
 177 0012 C854     		strb	r0, [r1, r3]
 104:Core/Src/main.c **** 
 178              		.loc 1 104 1 is_stmt 1 view .LVU33
 104:Core/Src/main.c **** 
 179              		.loc 1 104 10 is_stmt 0 view .LVU34
 180 0014 0133     		adds	r3, r3, #1
 181 0016 9BB2     		uxth	r3, r3
 182 0018 1380     		strh	r3, [r2]	@ movhi
 106:Core/Src/main.c **** {
 183              		.loc 1 106 1 is_stmt 1 view .LVU35
 106:Core/Src/main.c **** {
 184              		.loc 1 106 3 is_stmt 0 view .LVU36
 185 001a B3F5806F 		cmp	r3, #1024
 186 001e 02D3     		bcc	.L12
 108:Core/Src/main.c **** }
 187              		.loc 1 108 3 is_stmt 1 view .LVU37
 108:Core/Src/main.c **** }
 188              		.loc 1 108 13 is_stmt 0 view .LVU38
 189 0020 1346     		mov	r3, r2
 190 0022 0022     		movs	r2, #0
 191 0024 1A80     		strh	r2, [r3]	@ movhi
 192              	.L12:
 111:Core/Src/main.c **** {
 193              		.loc 1 111 1 is_stmt 1 view .LVU39
 111:Core/Src/main.c **** {
 194              		.loc 1 111 4 is_stmt 0 view .LVU40
 195 0026 0A4B     		ldr	r3, .L16+8
 196 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 111:Core/Src/main.c **** {
 197              		.loc 1 111 3 view .LVU41
 198 002a 43B9     		cbnz	r3, .L13
 113:Core/Src/main.c **** }
 199              		.loc 1 113 3 is_stmt 1 view .LVU42
 200 002c 0848     		ldr	r0, .L16+8
 201 002e FFF7FEFF 		bl	ReceiveReset
 202              	.LVL6:
 203              	.L14:
 119:Core/Src/main.c **** }
 204              		.loc 1 119 5 view .LVU43
 205 0032 0122     		movs	r2, #1
 206 0034 0649     		ldr	r1, .L16+8
 207 0036 0848     		ldr	r0, .L16+16
 208 0038 FFF7FEFF 		bl	HAL_UART_Receive_IT
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 11


 209              	.LVL7:
 120:Core/Src/main.c **** /* USER CODE END 0 */
 210              		.loc 1 120 1 is_stmt 0 view .LVU44
 211 003c 08BD     		pop	{r3, pc}
 212              	.L13:
 117:Core/Src/main.c **** }
 213              		.loc 1 117 3 is_stmt 1 view .LVU45
 214 003e 0448     		ldr	r0, .L16+8
 215 0040 FFF7FEFF 		bl	ContinueReceive
 216              	.LVL8:
 217 0044 F5E7     		b	.L14
 218              	.L17:
 219 0046 00BF     		.align	2
 220              	.L16:
 221 0048 00000000 		.word	startReceive
 222 004c 00000000 		.word	fuckIndex
 223 0050 00000000 		.word	rx_buff
 224 0054 00000000 		.word	fuckBuff
 225 0058 00000000 		.word	huart2
 226              		.cfi_endproc
 227              	.LFE132:
 229              		.section	.text.SysTick_Handler,"ax",%progbits
 230              		.align	1
 231              		.global	SysTick_Handler
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	SysTick_Handler:
 237              	.LFB138:
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 336:Core/Src/main.c **** void SysTick_Handler(void)
 337:Core/Src/main.c **** {
 238              		.loc 1 337 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242 0000 08B5     		push	{r3, lr}
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 3, -8
 245              		.cfi_offset 14, -4
 338:Core/Src/main.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* USER CODE END SysTick_IRQn 0 */
 341:Core/Src/main.c ****   HAL_IncTick();
 246              		.loc 1 341 3 view .LVU47
 247 0002 FFF7FEFF 		bl	HAL_IncTick
 248              	.LVL9:
 342:Core/Src/main.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   NOS_TimeEvent_TickHandler(&tetrisUpdateEvent);
 249              		.loc 1 344 3 view .LVU48
 250 0006 0848     		ldr	r0, .L21
 251 0008 FFF7FEFF 		bl	NOS_TimeEvent_TickHandler
 252              	.LVL10:
 345:Core/Src/main.c ****   NOS_TimeEvent_TickHandler(&screenUpdateEvent);
 253              		.loc 1 345 3 view .LVU49
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 12


 254 000c 0748     		ldr	r0, .L21+4
 255 000e FFF7FEFF 		bl	NOS_TimeEvent_TickHandler
 256              	.LVL11:
 346:Core/Src/main.c ****   NOS_TimeEvent_TickHandler(&uartTestEvent);
 257              		.loc 1 346 3 view .LVU50
 258 0012 0748     		ldr	r0, .L21+8
 259 0014 FFF7FEFF 		bl	NOS_TimeEvent_TickHandler
 260              	.LVL12:
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   if(startReceive)
 261              		.loc 1 348 3 view .LVU51
 262              		.loc 1 348 6 is_stmt 0 view .LVU52
 263 0018 064B     		ldr	r3, .L21+12
 264 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 265              		.loc 1 348 5 view .LVU53
 266 001c 1BB1     		cbz	r3, .L18
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****     receiveTime++;
 267              		.loc 1 350 5 is_stmt 1 view .LVU54
 268              		.loc 1 350 16 is_stmt 0 view .LVU55
 269 001e 064A     		ldr	r2, .L21+16
 270 0020 1368     		ldr	r3, [r2]
 271 0022 0133     		adds	r3, r3, #1
 272 0024 1360     		str	r3, [r2]
 273              	.L18:
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c ****   /* USER CODE END SysTick_IRQn 1 */
 353:Core/Src/main.c **** }
 274              		.loc 1 353 1 view .LVU56
 275 0026 08BD     		pop	{r3, pc}
 276              	.L22:
 277              		.align	2
 278              	.L21:
 279 0028 00000000 		.word	tetrisUpdateEvent
 280 002c 00000000 		.word	screenUpdateEvent
 281 0030 00000000 		.word	uartTestEvent
 282 0034 00000000 		.word	startReceive
 283 0038 00000000 		.word	receiveTime
 284              		.cfi_endproc
 285              	.LFE138:
 287              		.section	.text.Error_Handler,"ax",%progbits
 288              		.align	1
 289              		.global	Error_Handler
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 294              	Error_Handler:
 295              	.LFB139:
 354:Core/Src/main.c **** /* USER CODE END 4 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** /**
 357:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 358:Core/Src/main.c ****   * @retval None
 359:Core/Src/main.c ****   */
 360:Core/Src/main.c **** void Error_Handler(void)
 361:Core/Src/main.c **** {
 296              		.loc 1 361 1 is_stmt 1 view -0
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 13


 297              		.cfi_startproc
 298              		@ Volatile: function does not return.
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 362:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 363:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 364:Core/Src/main.c ****   __disable_irq();
 302              		.loc 1 364 3 view .LVU58
 303              	.LBB5:
 304              	.LBI5:
 305              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 14


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 15


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 306              		.loc 2 140 27 view .LVU59
 307              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 308              		.loc 2 142 3 view .LVU60
 309              		.syntax unified
 310              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 311 0000 72B6     		cpsid i
 312              	@ 0 "" 2
 313              		.thumb
 314              		.syntax unified
 315              	.L24:
 316              	.LBE6:
 317              	.LBE5:
 365:Core/Src/main.c ****   while (1)
 318              		.loc 1 365 3 discriminator 1 view .LVU61
 366:Core/Src/main.c ****   {
 367:Core/Src/main.c ****   }
 319              		.loc 1 367 3 discriminator 1 view .LVU62
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 16


 365:Core/Src/main.c ****   while (1)
 320              		.loc 1 365 9 discriminator 1 view .LVU63
 321 0002 FEE7     		b	.L24
 322              		.cfi_endproc
 323              	.LFE139:
 325              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 326              		.align	1
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 331              	MX_USART2_UART_Init:
 332              	.LFB136:
 291:Core/Src/main.c **** 
 333              		.loc 1 291 1 view -0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 08B5     		push	{r3, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 300:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 341              		.loc 1 300 3 view .LVU65
 300:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 342              		.loc 1 300 19 is_stmt 0 view .LVU66
 343 0002 0A48     		ldr	r0, .L29
 344 0004 0A4B     		ldr	r3, .L29+4
 345 0006 0360     		str	r3, [r0]
 301:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 346              		.loc 1 301 3 is_stmt 1 view .LVU67
 301:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 347              		.loc 1 301 24 is_stmt 0 view .LVU68
 348 0008 4FF41653 		mov	r3, #9600
 349 000c 4360     		str	r3, [r0, #4]
 302:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 350              		.loc 1 302 3 is_stmt 1 view .LVU69
 302:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 351              		.loc 1 302 26 is_stmt 0 view .LVU70
 352 000e 0023     		movs	r3, #0
 353 0010 8360     		str	r3, [r0, #8]
 303:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 354              		.loc 1 303 3 is_stmt 1 view .LVU71
 303:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 355              		.loc 1 303 24 is_stmt 0 view .LVU72
 356 0012 C360     		str	r3, [r0, #12]
 304:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 357              		.loc 1 304 3 is_stmt 1 view .LVU73
 304:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 358              		.loc 1 304 22 is_stmt 0 view .LVU74
 359 0014 0361     		str	r3, [r0, #16]
 305:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 360              		.loc 1 305 3 is_stmt 1 view .LVU75
 305:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 361              		.loc 1 305 20 is_stmt 0 view .LVU76
 362 0016 0C22     		movs	r2, #12
 363 0018 4261     		str	r2, [r0, #20]
 306:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 17


 364              		.loc 1 306 3 is_stmt 1 view .LVU77
 306:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 365              		.loc 1 306 25 is_stmt 0 view .LVU78
 366 001a 8361     		str	r3, [r0, #24]
 307:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 367              		.loc 1 307 3 is_stmt 1 view .LVU79
 307:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 368              		.loc 1 307 28 is_stmt 0 view .LVU80
 369 001c C361     		str	r3, [r0, #28]
 308:Core/Src/main.c ****   {
 370              		.loc 1 308 3 is_stmt 1 view .LVU81
 308:Core/Src/main.c ****   {
 371              		.loc 1 308 7 is_stmt 0 view .LVU82
 372 001e FFF7FEFF 		bl	HAL_UART_Init
 373              	.LVL13:
 308:Core/Src/main.c ****   {
 374              		.loc 1 308 6 view .LVU83
 375 0022 00B9     		cbnz	r0, .L28
 316:Core/Src/main.c **** 
 376              		.loc 1 316 1 view .LVU84
 377 0024 08BD     		pop	{r3, pc}
 378              	.L28:
 310:Core/Src/main.c ****   }
 379              		.loc 1 310 5 is_stmt 1 view .LVU85
 380 0026 FFF7FEFF 		bl	Error_Handler
 381              	.LVL14:
 382              	.L30:
 383 002a 00BF     		.align	2
 384              	.L29:
 385 002c 00000000 		.word	huart2
 386 0030 00440040 		.word	1073759232
 387              		.cfi_endproc
 388              	.LFE136:
 390              		.section	.text.MX_TIM6_Init,"ax",%progbits
 391              		.align	1
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	MX_TIM6_Init:
 397              	.LFB135:
 253:Core/Src/main.c **** 
 398              		.loc 1 253 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 8
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402 0000 00B5     		push	{lr}
 403              		.cfi_def_cfa_offset 4
 404              		.cfi_offset 14, -4
 405 0002 83B0     		sub	sp, sp, #12
 406              		.cfi_def_cfa_offset 16
 259:Core/Src/main.c **** 
 407              		.loc 1 259 3 view .LVU87
 259:Core/Src/main.c **** 
 408              		.loc 1 259 27 is_stmt 0 view .LVU88
 409 0004 0023     		movs	r3, #0
 410 0006 0093     		str	r3, [sp]
 411 0008 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 18


 264:Core/Src/main.c ****   htim6.Init.Prescaler = 0;
 412              		.loc 1 264 3 is_stmt 1 view .LVU89
 264:Core/Src/main.c ****   htim6.Init.Prescaler = 0;
 413              		.loc 1 264 18 is_stmt 0 view .LVU90
 414 000a 0D48     		ldr	r0, .L37
 415 000c 0D4A     		ldr	r2, .L37+4
 416 000e 0260     		str	r2, [r0]
 265:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 417              		.loc 1 265 3 is_stmt 1 view .LVU91
 265:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 418              		.loc 1 265 24 is_stmt 0 view .LVU92
 419 0010 4360     		str	r3, [r0, #4]
 266:Core/Src/main.c ****   htim6.Init.Period = 65535;
 420              		.loc 1 266 3 is_stmt 1 view .LVU93
 266:Core/Src/main.c ****   htim6.Init.Period = 65535;
 421              		.loc 1 266 26 is_stmt 0 view .LVU94
 422 0012 8360     		str	r3, [r0, #8]
 267:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 423              		.loc 1 267 3 is_stmt 1 view .LVU95
 267:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 424              		.loc 1 267 21 is_stmt 0 view .LVU96
 425 0014 4FF6FF72 		movw	r2, #65535
 426 0018 C260     		str	r2, [r0, #12]
 268:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 427              		.loc 1 268 3 is_stmt 1 view .LVU97
 268:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 428              		.loc 1 268 32 is_stmt 0 view .LVU98
 429 001a 8361     		str	r3, [r0, #24]
 269:Core/Src/main.c ****   {
 430              		.loc 1 269 3 is_stmt 1 view .LVU99
 269:Core/Src/main.c ****   {
 431              		.loc 1 269 7 is_stmt 0 view .LVU100
 432 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 433              	.LVL15:
 269:Core/Src/main.c ****   {
 434              		.loc 1 269 6 view .LVU101
 435 0020 50B9     		cbnz	r0, .L35
 273:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 436              		.loc 1 273 3 is_stmt 1 view .LVU102
 273:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 437              		.loc 1 273 37 is_stmt 0 view .LVU103
 438 0022 0023     		movs	r3, #0
 439 0024 0093     		str	r3, [sp]
 274:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 440              		.loc 1 274 3 is_stmt 1 view .LVU104
 274:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 441              		.loc 1 274 33 is_stmt 0 view .LVU105
 442 0026 0193     		str	r3, [sp, #4]
 275:Core/Src/main.c ****   {
 443              		.loc 1 275 3 is_stmt 1 view .LVU106
 275:Core/Src/main.c ****   {
 444              		.loc 1 275 7 is_stmt 0 view .LVU107
 445 0028 6946     		mov	r1, sp
 446 002a 0548     		ldr	r0, .L37
 447 002c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 448              	.LVL16:
 275:Core/Src/main.c ****   {
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 19


 449              		.loc 1 275 6 view .LVU108
 450 0030 20B9     		cbnz	r0, .L36
 283:Core/Src/main.c **** 
 451              		.loc 1 283 1 view .LVU109
 452 0032 03B0     		add	sp, sp, #12
 453              		.cfi_remember_state
 454              		.cfi_def_cfa_offset 4
 455              		@ sp needed
 456 0034 5DF804FB 		ldr	pc, [sp], #4
 457              	.L35:
 458              		.cfi_restore_state
 271:Core/Src/main.c ****   }
 459              		.loc 1 271 5 is_stmt 1 view .LVU110
 460 0038 FFF7FEFF 		bl	Error_Handler
 461              	.LVL17:
 462              	.L36:
 277:Core/Src/main.c ****   }
 463              		.loc 1 277 5 view .LVU111
 464 003c FFF7FEFF 		bl	Error_Handler
 465              	.LVL18:
 466              	.L38:
 467              		.align	2
 468              	.L37:
 469 0040 00000000 		.word	htim6
 470 0044 00100040 		.word	1073745920
 471              		.cfi_endproc
 472              	.LFE135:
 474              		.section	.text.SystemClock_Config,"ax",%progbits
 475              		.align	1
 476              		.global	SystemClock_Config
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 481              	SystemClock_Config:
 482              	.LFB134:
 206:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 483              		.loc 1 206 1 view -0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 80
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487 0000 00B5     		push	{lr}
 488              		.cfi_def_cfa_offset 4
 489              		.cfi_offset 14, -4
 490 0002 95B0     		sub	sp, sp, #84
 491              		.cfi_def_cfa_offset 88
 207:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 492              		.loc 1 207 3 view .LVU113
 207:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 493              		.loc 1 207 22 is_stmt 0 view .LVU114
 494 0004 3022     		movs	r2, #48
 495 0006 0021     		movs	r1, #0
 496 0008 08A8     		add	r0, sp, #32
 497 000a FFF7FEFF 		bl	memset
 498              	.LVL19:
 208:Core/Src/main.c **** 
 499              		.loc 1 208 3 is_stmt 1 view .LVU115
 208:Core/Src/main.c **** 
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 20


 500              		.loc 1 208 22 is_stmt 0 view .LVU116
 501 000e 0023     		movs	r3, #0
 502 0010 0393     		str	r3, [sp, #12]
 503 0012 0493     		str	r3, [sp, #16]
 504 0014 0593     		str	r3, [sp, #20]
 505 0016 0693     		str	r3, [sp, #24]
 506 0018 0793     		str	r3, [sp, #28]
 212:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 507              		.loc 1 212 3 is_stmt 1 view .LVU117
 508              	.LBB7:
 212:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 509              		.loc 1 212 3 view .LVU118
 510 001a 0193     		str	r3, [sp, #4]
 212:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 511              		.loc 1 212 3 view .LVU119
 512 001c 1F4A     		ldr	r2, .L45
 513 001e 116C     		ldr	r1, [r2, #64]
 514 0020 41F08051 		orr	r1, r1, #268435456
 515 0024 1164     		str	r1, [r2, #64]
 212:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 516              		.loc 1 212 3 view .LVU120
 517 0026 126C     		ldr	r2, [r2, #64]
 518 0028 02F08052 		and	r2, r2, #268435456
 519 002c 0192     		str	r2, [sp, #4]
 212:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 520              		.loc 1 212 3 view .LVU121
 521 002e 019A     		ldr	r2, [sp, #4]
 522              	.LBE7:
 212:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 523              		.loc 1 212 3 view .LVU122
 213:Core/Src/main.c **** 
 524              		.loc 1 213 3 view .LVU123
 525              	.LBB8:
 213:Core/Src/main.c **** 
 526              		.loc 1 213 3 view .LVU124
 527 0030 0293     		str	r3, [sp, #8]
 213:Core/Src/main.c **** 
 528              		.loc 1 213 3 view .LVU125
 529 0032 1B4A     		ldr	r2, .L45+4
 530 0034 1168     		ldr	r1, [r2]
 531 0036 41F48041 		orr	r1, r1, #16384
 532 003a 1160     		str	r1, [r2]
 213:Core/Src/main.c **** 
 533              		.loc 1 213 3 view .LVU126
 534 003c 1268     		ldr	r2, [r2]
 535 003e 02F48042 		and	r2, r2, #16384
 536 0042 0292     		str	r2, [sp, #8]
 213:Core/Src/main.c **** 
 537              		.loc 1 213 3 view .LVU127
 538 0044 029A     		ldr	r2, [sp, #8]
 539              	.LBE8:
 213:Core/Src/main.c **** 
 540              		.loc 1 213 3 view .LVU128
 218:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 541              		.loc 1 218 3 view .LVU129
 218:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 542              		.loc 1 218 36 is_stmt 0 view .LVU130
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 21


 543 0046 0222     		movs	r2, #2
 544 0048 0892     		str	r2, [sp, #32]
 219:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 545              		.loc 1 219 3 is_stmt 1 view .LVU131
 219:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 546              		.loc 1 219 30 is_stmt 0 view .LVU132
 547 004a 0121     		movs	r1, #1
 548 004c 0B91     		str	r1, [sp, #44]
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 549              		.loc 1 220 3 is_stmt 1 view .LVU133
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 550              		.loc 1 220 41 is_stmt 0 view .LVU134
 551 004e 1021     		movs	r1, #16
 552 0050 0C91     		str	r1, [sp, #48]
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 553              		.loc 1 221 3 is_stmt 1 view .LVU135
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 554              		.loc 1 221 34 is_stmt 0 view .LVU136
 555 0052 0E92     		str	r2, [sp, #56]
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 556              		.loc 1 222 3 is_stmt 1 view .LVU137
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 557              		.loc 1 222 35 is_stmt 0 view .LVU138
 558 0054 0F93     		str	r3, [sp, #60]
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 160;
 559              		.loc 1 223 3 is_stmt 1 view .LVU139
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 160;
 560              		.loc 1 223 30 is_stmt 0 view .LVU140
 561 0056 0823     		movs	r3, #8
 562 0058 1093     		str	r3, [sp, #64]
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 563              		.loc 1 224 3 is_stmt 1 view .LVU141
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 564              		.loc 1 224 30 is_stmt 0 view .LVU142
 565 005a A023     		movs	r3, #160
 566 005c 1193     		str	r3, [sp, #68]
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 567              		.loc 1 225 3 is_stmt 1 view .LVU143
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 568              		.loc 1 225 30 is_stmt 0 view .LVU144
 569 005e 1292     		str	r2, [sp, #72]
 226:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 570              		.loc 1 226 3 is_stmt 1 view .LVU145
 226:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 571              		.loc 1 226 30 is_stmt 0 view .LVU146
 572 0060 0423     		movs	r3, #4
 573 0062 1393     		str	r3, [sp, #76]
 227:Core/Src/main.c ****   {
 574              		.loc 1 227 3 is_stmt 1 view .LVU147
 227:Core/Src/main.c ****   {
 575              		.loc 1 227 7 is_stmt 0 view .LVU148
 576 0064 08A8     		add	r0, sp, #32
 577 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 578              	.LVL20:
 227:Core/Src/main.c ****   {
 579              		.loc 1 227 6 view .LVU149
 580 006a 98B9     		cbnz	r0, .L43
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 22


 234:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 581              		.loc 1 234 3 is_stmt 1 view .LVU150
 234:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 582              		.loc 1 234 31 is_stmt 0 view .LVU151
 583 006c 0F23     		movs	r3, #15
 584 006e 0393     		str	r3, [sp, #12]
 236:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 585              		.loc 1 236 3 is_stmt 1 view .LVU152
 236:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 586              		.loc 1 236 34 is_stmt 0 view .LVU153
 587 0070 0223     		movs	r3, #2
 588 0072 0493     		str	r3, [sp, #16]
 237:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 589              		.loc 1 237 3 is_stmt 1 view .LVU154
 237:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 590              		.loc 1 237 35 is_stmt 0 view .LVU155
 591 0074 0023     		movs	r3, #0
 592 0076 0593     		str	r3, [sp, #20]
 238:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 593              		.loc 1 238 3 is_stmt 1 view .LVU156
 238:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 594              		.loc 1 238 36 is_stmt 0 view .LVU157
 595 0078 4FF4A053 		mov	r3, #5120
 596 007c 0693     		str	r3, [sp, #24]
 239:Core/Src/main.c **** 
 597              		.loc 1 239 3 is_stmt 1 view .LVU158
 239:Core/Src/main.c **** 
 598              		.loc 1 239 36 is_stmt 0 view .LVU159
 599 007e 4FF48053 		mov	r3, #4096
 600 0082 0793     		str	r3, [sp, #28]
 241:Core/Src/main.c ****   {
 601              		.loc 1 241 3 is_stmt 1 view .LVU160
 241:Core/Src/main.c ****   {
 602              		.loc 1 241 7 is_stmt 0 view .LVU161
 603 0084 0521     		movs	r1, #5
 604 0086 03A8     		add	r0, sp, #12
 605 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 606              	.LVL21:
 241:Core/Src/main.c ****   {
 607              		.loc 1 241 6 view .LVU162
 608 008c 20B9     		cbnz	r0, .L44
 245:Core/Src/main.c **** 
 609              		.loc 1 245 1 view .LVU163
 610 008e 15B0     		add	sp, sp, #84
 611              		.cfi_remember_state
 612              		.cfi_def_cfa_offset 4
 613              		@ sp needed
 614 0090 5DF804FB 		ldr	pc, [sp], #4
 615              	.L43:
 616              		.cfi_restore_state
 229:Core/Src/main.c ****   }
 617              		.loc 1 229 5 is_stmt 1 view .LVU164
 618 0094 FFF7FEFF 		bl	Error_Handler
 619              	.LVL22:
 620              	.L44:
 243:Core/Src/main.c ****   }
 621              		.loc 1 243 5 view .LVU165
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 23


 622 0098 FFF7FEFF 		bl	Error_Handler
 623              	.LVL23:
 624              	.L46:
 625              		.align	2
 626              	.L45:
 627 009c 00380240 		.word	1073887232
 628 00a0 00700040 		.word	1073770496
 629              		.cfi_endproc
 630              	.LFE134:
 632              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 633              		.align	2
 634              	.LC0:
 635 0000 48454C4C 		.ascii	"HELLO\000"
 635      4F00
 636 0006 0000     		.align	2
 637              	.LC1:
 638 0008 52656369 		.ascii	"Recieved!\000"
 638      65766564 
 638      2100
 639              		.section	.text.main,"ax",%progbits
 640              		.align	1
 641              		.global	main
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 646              	main:
 647              	.LFB133:
 128:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 648              		.loc 1 128 1 view -0
 649              		.cfi_startproc
 650              		@ Volatile: function does not return.
 651              		@ args = 0, pretend = 0, frame = 16
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653 0000 00B5     		push	{lr}
 654              		.cfi_def_cfa_offset 4
 655              		.cfi_offset 14, -4
 656 0002 85B0     		sub	sp, sp, #20
 657              		.cfi_def_cfa_offset 24
 136:Core/Src/main.c **** 
 658              		.loc 1 136 3 view .LVU167
 659 0004 FFF7FEFF 		bl	HAL_Init
 660              	.LVL24:
 143:Core/Src/main.c **** 
 661              		.loc 1 143 3 view .LVU168
 662 0008 FFF7FEFF 		bl	SystemClock_Config
 663              	.LVL25:
 150:Core/Src/main.c ****   MX_USART2_UART_Init();
 664              		.loc 1 150 3 view .LVU169
 665 000c FFF7FEFF 		bl	MX_GPIO_Init
 666              	.LVL26:
 151:Core/Src/main.c ****   MX_TIM6_Init();
 667              		.loc 1 151 3 view .LVU170
 668 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 669              	.LVL27:
 152:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 670              		.loc 1 152 3 view .LVU171
 671 0014 FFF7FEFF 		bl	MX_TIM6_Init
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 24


 672              	.LVL28:
 154:Core/Src/main.c ****   HAL_UART_Transmit(&huart2,"HELLO",sizeof("HELLO"),1000);
 673              		.loc 1 154 3 view .LVU172
 674 0018 314C     		ldr	r4, .L54
 675 001a 0122     		movs	r2, #1
 676 001c 3149     		ldr	r1, .L54+4
 677 001e 2046     		mov	r0, r4
 678 0020 FFF7FEFF 		bl	HAL_UART_Receive_IT
 679              	.LVL29:
 155:Core/Src/main.c ****   visInit();
 680              		.loc 1 155 3 view .LVU173
 681 0024 4FF47A73 		mov	r3, #1000
 682 0028 0622     		movs	r2, #6
 683 002a 2F49     		ldr	r1, .L54+8
 684 002c 2046     		mov	r0, r4
 685 002e FFF7FEFF 		bl	HAL_UART_Transmit
 686              	.LVL30:
 156:Core/Src/main.c **** 
 687              		.loc 1 156 3 view .LVU174
 688 0032 FFF7FEFF 		bl	visInit
 689              	.LVL31:
 158:Core/Src/main.c **** 
 690              		.loc 1 158 3 view .LVU175
 691 0036 2D4C     		ldr	r4, .L54+12
 692 0038 2023     		movs	r3, #32
 693 003a 2D4A     		ldr	r2, .L54+16
 694 003c 2D49     		ldr	r1, .L54+20
 695 003e 2046     		mov	r0, r4
 696 0040 FFF7FEFF 		bl	NOS_WS2812B_Strip_FullInit
 697              	.LVL32:
 160:Core/Src/main.c ****   NOS_TimeEvent_Init(&screenUpdateEvent, 20);
 698              		.loc 1 160 3 view .LVU176
 699 0044 3221     		movs	r1, #50
 700 0046 2C48     		ldr	r0, .L54+24
 701 0048 FFF7FEFF 		bl	NOS_TimeEvent_Init
 702              	.LVL33:
 161:Core/Src/main.c ****   NOS_TimeEvent_Init(&uartTestEvent, 1000);
 703              		.loc 1 161 3 view .LVU177
 704 004c 1421     		movs	r1, #20
 705 004e 2B48     		ldr	r0, .L54+28
 706 0050 FFF7FEFF 		bl	NOS_TimeEvent_Init
 707              	.LVL34:
 162:Core/Src/main.c ****   NOS_WS2812B_Strip_TestFill(&stripA);
 708              		.loc 1 162 3 view .LVU178
 709 0054 4FF47A71 		mov	r1, #1000
 710 0058 2948     		ldr	r0, .L54+32
 711 005a FFF7FEFF 		bl	NOS_TimeEvent_Init
 712              	.LVL35:
 163:Core/Src/main.c ****   NOS_Math_SinValue_Init(&bright,20,60,1);
 713              		.loc 1 163 3 view .LVU179
 714 005e 2046     		mov	r0, r4
 715 0060 FFF7FEFF 		bl	NOS_WS2812B_Strip_TestFill
 716              	.LVL36:
 164:Core/Src/main.c ****   /* USER CODE END 2 */
 717              		.loc 1 164 3 view .LVU180
 718 0064 0123     		movs	r3, #1
 719 0066 3C22     		movs	r2, #60
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 25


 720 0068 1421     		movs	r1, #20
 721 006a 2648     		ldr	r0, .L54+36
 722 006c FFF7FEFF 		bl	NOS_Math_SinValue_Init
 723              	.LVL37:
 724 0070 09E0     		b	.L50
 725              	.L49:
 180:Core/Src/main.c ****       NOS_TimeEvent_FinishEvent(&tetrisUpdateEvent);
 726              		.loc 1 180 7 view .LVU181
 727 0072 2448     		ldr	r0, .L54+36
 728 0074 FFF7FEFF 		bl	NOS_Math_SinValue_Handler
 729              	.LVL38:
 181:Core/Src/main.c ****     }
 730              		.loc 1 181 7 view .LVU182
 731 0078 1F48     		ldr	r0, .L54+24
 732 007a FFF7FEFF 		bl	NOS_TimeEvent_FinishEvent
 733              	.LVL39:
 734              	.L48:
 185:Core/Src/main.c ****     {
 735              		.loc 1 185 5 view .LVU183
 185:Core/Src/main.c ****     {
 736              		.loc 1 185 9 is_stmt 0 view .LVU184
 737 007e 1F48     		ldr	r0, .L54+28
 738 0080 FFF7FEFF 		bl	NOS_TimeEvent_Check
 739              	.LVL40:
 185:Core/Src/main.c ****     {
 740              		.loc 1 185 8 view .LVU185
 741 0084 E8B9     		cbnz	r0, .L53
 742              	.L50:
 169:Core/Src/main.c ****   {
 743              		.loc 1 169 3 is_stmt 1 view .LVU186
 171:Core/Src/main.c ****     { 
 744              		.loc 1 171 5 view .LVU187
 171:Core/Src/main.c ****     { 
 745              		.loc 1 171 9 is_stmt 0 view .LVU188
 746 0086 1C48     		ldr	r0, .L54+24
 747 0088 FFF7FEFF 		bl	NOS_TimeEvent_Check
 748              	.LVL41:
 171:Core/Src/main.c ****     { 
 749              		.loc 1 171 8 view .LVU189
 750 008c 0028     		cmp	r0, #0
 751 008e F6D0     		beq	.L48
 173:Core/Src/main.c ****       {
 752              		.loc 1 173 7 is_stmt 1 view .LVU190
 173:Core/Src/main.c ****       {
 753              		.loc 1 173 10 is_stmt 0 view .LVU191
 754 0090 1D4B     		ldr	r3, .L54+40
 755 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173:Core/Src/main.c ****       {
 756              		.loc 1 173 9 view .LVU192
 757 0094 002B     		cmp	r3, #0
 758 0096 ECD0     		beq	.L49
 759              	.LBB9:
 175:Core/Src/main.c ****         NOS_WS2812B_Strip_SetPixelByRGB(&stripA,29,0x00a529c4);
 760              		.loc 1 175 9 is_stmt 1 view .LVU193
 175:Core/Src/main.c ****         NOS_WS2812B_Strip_SetPixelByRGB(&stripA,29,0x00a529c4);
 761              		.loc 1 175 14 is_stmt 0 view .LVU194
 762 0098 1C4A     		ldr	r2, .L54+44
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 26


 763 009a 01AB     		add	r3, sp, #4
 764 009c 07CA     		ldm	r2, {r0, r1, r2}
 765 009e 03C3     		stmia	r3!, {r0, r1}
 766 00a0 1A80     		strh	r2, [r3]	@ movhi
 176:Core/Src/main.c ****         HAL_UART_Transmit(&huart2,&mess,10,1000);
 767              		.loc 1 176 9 is_stmt 1 view .LVU195
 768 00a2 1B4A     		ldr	r2, .L54+48
 769 00a4 1D21     		movs	r1, #29
 770 00a6 1148     		ldr	r0, .L54+12
 771 00a8 FFF7FEFF 		bl	NOS_WS2812B_Strip_SetPixelByRGB
 772              	.LVL42:
 177:Core/Src/main.c ****         rx_flag = false;
 773              		.loc 1 177 9 view .LVU196
 774 00ac 4FF47A73 		mov	r3, #1000
 775 00b0 0A22     		movs	r2, #10
 776 00b2 01A9     		add	r1, sp, #4
 777 00b4 0A48     		ldr	r0, .L54
 778 00b6 FFF7FEFF 		bl	HAL_UART_Transmit
 779              	.LVL43:
 178:Core/Src/main.c ****       }
 780              		.loc 1 178 9 view .LVU197
 178:Core/Src/main.c ****       }
 781              		.loc 1 178 17 is_stmt 0 view .LVU198
 782 00ba 134B     		ldr	r3, .L54+40
 783 00bc 0022     		movs	r2, #0
 784 00be 1A70     		strb	r2, [r3]
 785 00c0 D7E7     		b	.L49
 786              	.L53:
 787              	.LBE9:
 187:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripA);
 788              		.loc 1 187 7 is_stmt 1 view .LVU199
 187:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripA);
 789              		.loc 1 187 23 is_stmt 0 view .LVU200
 790 00c2 1048     		ldr	r0, .L54+36
 791 00c4 FFF7FEFF 		bl	NOS_Math_GetSinValue
 792              	.LVL44:
 187:Core/Src/main.c ****       NOS_WS2812B_Strip_Update(&stripA);
 793              		.loc 1 187 21 view .LVU201
 794 00c8 084B     		ldr	r3, .L54+12
 795 00ca D860     		str	r0, [r3, #12]
 188:Core/Src/main.c ****       visHandle();
 796              		.loc 1 188 7 is_stmt 1 view .LVU202
 797 00cc 1846     		mov	r0, r3
 798 00ce FFF7FEFF 		bl	NOS_WS2812B_Strip_Update
 799              	.LVL45:
 189:Core/Src/main.c **** 
 800              		.loc 1 189 7 view .LVU203
 801 00d2 FFF7FEFF 		bl	visHandle
 802              	.LVL46:
 191:Core/Src/main.c ****     }
 803              		.loc 1 191 7 view .LVU204
 804 00d6 0948     		ldr	r0, .L54+28
 805 00d8 FFF7FEFF 		bl	NOS_TimeEvent_FinishEvent
 806              	.LVL47:
 807 00dc D3E7     		b	.L50
 808              	.L55:
 809 00de 00BF     		.align	2
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 27


 810              	.L54:
 811 00e0 00000000 		.word	huart2
 812 00e4 00000000 		.word	rx_buff
 813 00e8 00000000 		.word	.LC0
 814 00ec 00000000 		.word	stripA
 815 00f0 00000000 		.word	pixelsA
 816 00f4 00000000 		.word	frameBuffer1
 817 00f8 00000000 		.word	tetrisUpdateEvent
 818 00fc 00000000 		.word	screenUpdateEvent
 819 0100 00000000 		.word	uartTestEvent
 820 0104 00000000 		.word	bright
 821 0108 00000000 		.word	rx_flag
 822 010c 08000000 		.word	.LC1
 823 0110 C429A500 		.word	10824132
 824              		.cfi_endproc
 825              	.LFE133:
 827              		.global	bright
 828              		.section	.bss.bright,"aw",%nobits
 829              		.align	2
 832              	bright:
 833 0000 00000000 		.space	20
 833      00000000 
 833      00000000 
 833      00000000 
 833      00000000 
 834              		.global	receiveTime
 835              		.section	.bss.receiveTime,"aw",%nobits
 836              		.align	2
 839              	receiveTime:
 840 0000 00000000 		.space	4
 841              		.global	endReceive
 842              		.section	.bss.endReceive,"aw",%nobits
 845              	endReceive:
 846 0000 00       		.space	1
 847              		.global	startReceive
 848              		.section	.bss.startReceive,"aw",%nobits
 851              	startReceive:
 852 0000 00       		.space	1
 853              		.global	currMessageLenght
 854              		.section	.bss.currMessageLenght,"aw",%nobits
 855              		.align	2
 858              	currMessageLenght:
 859 0000 00000000 		.space	4
 860              		.global	tx_flag
 861              		.section	.bss.tx_flag,"aw",%nobits
 864              	tx_flag:
 865 0000 00       		.space	1
 866              		.global	rx_flag
 867              		.section	.bss.rx_flag,"aw",%nobits
 870              	rx_flag:
 871 0000 00       		.space	1
 872              		.global	fuckIndex
 873              		.section	.bss.fuckIndex,"aw",%nobits
 874              		.align	1
 877              	fuckIndex:
 878 0000 0000     		.space	2
 879              		.global	fuckBuff
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 28


 880              		.section	.bss.fuckBuff,"aw",%nobits
 881              		.align	2
 884              	fuckBuff:
 885 0000 00000000 		.space	1024
 885      00000000 
 885      00000000 
 885      00000000 
 885      00000000 
 886              		.global	rx_buff
 887              		.section	.bss.rx_buff,"aw",%nobits
 888              		.align	2
 891              	rx_buff:
 892 0000 00000000 		.space	256
 892      00000000 
 892      00000000 
 892      00000000 
 892      00000000 
 893              		.global	pixelsA
 894              		.section	.bss.pixelsA,"aw",%nobits
 895              		.align	2
 898              	pixelsA:
 899 0000 00000000 		.space	96
 899      00000000 
 899      00000000 
 899      00000000 
 899      00000000 
 900              		.global	stripA
 901              		.section	.bss.stripA,"aw",%nobits
 902              		.align	2
 905              	stripA:
 906 0000 00000000 		.space	16
 906      00000000 
 906      00000000 
 906      00000000 
 907              		.global	uartTestEvent
 908              		.section	.bss.uartTestEvent,"aw",%nobits
 909              		.align	2
 912              	uartTestEvent:
 913 0000 00000000 		.space	12
 913      00000000 
 913      00000000 
 914              		.global	screenUpdateEvent
 915              		.section	.bss.screenUpdateEvent,"aw",%nobits
 916              		.align	2
 919              	screenUpdateEvent:
 920 0000 00000000 		.space	12
 920      00000000 
 920      00000000 
 921              		.global	tetrisUpdateEvent
 922              		.section	.bss.tetrisUpdateEvent,"aw",%nobits
 923              		.align	2
 926              	tetrisUpdateEvent:
 927 0000 00000000 		.space	12
 927      00000000 
 927      00000000 
 928              		.global	huart2
 929              		.section	.bss.huart2,"aw",%nobits
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 29


 930              		.align	2
 933              	huart2:
 934 0000 00000000 		.space	68
 934      00000000 
 934      00000000 
 934      00000000 
 934      00000000 
 935              		.global	htim6
 936              		.section	.bss.htim6,"aw",%nobits
 937              		.align	2
 940              	htim6:
 941 0000 00000000 		.space	72
 941      00000000 
 941      00000000 
 941      00000000 
 941      00000000 
 942              		.text
 943              	.Letext0:
 944              		.file 3 "c:\\users\\igorn\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 945              		.file 4 "c:\\users\\igorn\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 946              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 947              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 948              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 949              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 950              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 951              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 952              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 953              		.file 12 "Core/Inc/../Src/NOS_LIB_Driver/Inc/NOS_Typedefs.h"
 954              		.file 13 "Core/Inc/../Src/NOS_LIB_Driver/Inc/NOS_WS2812B_Strip.h"
 955              		.file 14 "Core/Inc/../Src/NOS_LIB_Driver/Inc/NOS_Math.h"
 956              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 957              		.file 16 "Core/Inc/../Src/NOS_LIB_Driver/Inc/NOS_Time.h"
 958              		.file 17 "Core/Inc/../Src/NOS_LIB_Driver/Inc/WS2812B_Effects.h"
 959              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 960              		.file 19 "<built-in>"
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:61     .text.MX_GPIO_Init:00000020 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:66     .text.ReceiveReset:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:72     .text.ReceiveReset:00000000 ReceiveReset
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:96     .text.ReceiveReset:00000010 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:858    .bss.currMessageLenght:00000000 currMessageLenght
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:870    .bss.rx_flag:00000000 rx_flag
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:102    .text.ContinueReceive:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:108    .text.ContinueReceive:00000000 ContinueReceive
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:137    .text.ContinueReceive:00000010 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:891    .bss.rx_buff:00000000 rx_buff
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:143    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:149    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:221    .text.HAL_UART_RxCpltCallback:00000048 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:851    .bss.startReceive:00000000 startReceive
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:877    .bss.fuckIndex:00000000 fuckIndex
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:884    .bss.fuckBuff:00000000 fuckBuff
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:933    .bss.huart2:00000000 huart2
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:230    .text.SysTick_Handler:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:236    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:279    .text.SysTick_Handler:00000028 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:926    .bss.tetrisUpdateEvent:00000000 tetrisUpdateEvent
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:919    .bss.screenUpdateEvent:00000000 screenUpdateEvent
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:912    .bss.uartTestEvent:00000000 uartTestEvent
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:839    .bss.receiveTime:00000000 receiveTime
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:288    .text.Error_Handler:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:294    .text.Error_Handler:00000000 Error_Handler
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:326    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:331    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:385    .text.MX_USART2_UART_Init:0000002c $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:391    .text.MX_TIM6_Init:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:396    .text.MX_TIM6_Init:00000000 MX_TIM6_Init
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:469    .text.MX_TIM6_Init:00000040 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:940    .bss.htim6:00000000 htim6
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:475    .text.SystemClock_Config:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:481    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:627    .text.SystemClock_Config:0000009c $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:633    .rodata.main.str1.4:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:640    .text.main:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:646    .text.main:00000000 main
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:811    .text.main:000000e0 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:905    .bss.stripA:00000000 stripA
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:898    .bss.pixelsA:00000000 pixelsA
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:832    .bss.bright:00000000 bright
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:829    .bss.bright:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:836    .bss.receiveTime:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:845    .bss.endReceive:00000000 endReceive
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:846    .bss.endReceive:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:852    .bss.startReceive:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:855    .bss.currMessageLenght:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:864    .bss.tx_flag:00000000 tx_flag
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:865    .bss.tx_flag:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:871    .bss.rx_flag:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:874    .bss.fuckIndex:00000000 $d
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s 			page 31


C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:881    .bss.fuckBuff:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:888    .bss.rx_buff:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:895    .bss.pixelsA:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:902    .bss.stripA:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:909    .bss.uartTestEvent:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:916    .bss.screenUpdateEvent:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:923    .bss.tetrisUpdateEvent:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:930    .bss.huart2:00000000 $d
C:\Users\igorn\AppData\Local\Temp\ccrfwrRj.s:937    .bss.htim6:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Receive_IT
HAL_IncTick
NOS_TimeEvent_TickHandler
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_UART_Transmit
visInit
NOS_WS2812B_Strip_FullInit
NOS_TimeEvent_Init
NOS_WS2812B_Strip_TestFill
NOS_Math_SinValue_Init
NOS_Math_SinValue_Handler
NOS_TimeEvent_FinishEvent
NOS_TimeEvent_Check
NOS_WS2812B_Strip_SetPixelByRGB
NOS_Math_GetSinValue
NOS_WS2812B_Strip_Update
visHandle
frameBuffer1
